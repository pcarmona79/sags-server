2004-08-12  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Channel.hpp:
	* src/Channel.cpp:
		- Added Start() method.
		- New GenerateChannelMessage() method.
		- New ExtractHeader(), ExtractBody(), SetHeaderElement() and
		SearchHeaderElement() methods for header and body manipulation.

	* src/Packet.hpp:
		- Added PCKT_VERSION to represent version of network protocol.

	* src/Main.cpp:
		- Using PCKT_VERSION for version checking.

	* src/Program.cpp:
		- GeneralChannel is started after network server starts.


2004-08-11  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Packet.hpp:
		- Added two packet types to manage the channel topic.


2004-08-07  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Channel.hpp:
	* src/Channel.cpp:
		- New files.
		- Contains new object to manage chat messages.

	* src/Main.cpp:
		- Manage new chat packets.

	* src/Network.cpp:
		- Desconnecting functions now removes the client from general
		channel.

	* src/Packet.hpp:
		- New packets type for chat channel.


2004-07-20  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Process.hpp:
	* src/Process.cpp:
		- Added integer to store the last value returned by the process.
		- Added info "LastValueReturned".

	* Released 0.3.2 version.


2004-06-30  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* Released 0.3.1 version.


2004-06-29  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Main.cpp:
		- Fixed bad testing on if sentence for kill, launch and restart
		packets.

	* src/Process.cpp:
		- Descriptor is now removed from application on WaitExit()
		method.


2004-06-28  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>


	* src/Packet.hpp:
		- Added new packet types.

	* src/Process.hpp:
	* src/Process.cpp:
		- Added method to check if the process is running.

	* src/ProcTree.hpp:
	* src/ProcTree.cpp:
		- Three new method to kill, start and restart a process.

	* src/Main.cpp:
		- Manage new packet types to control a process.


2004-06-23  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* Released SAGS Server 0.3.0.


2004-06-20  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Process.cpp:
		- Now we send a Session::Authorized only if it is the first
		start of the process.


2004-06-20  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Packet.hpp:
	* src/Packet.cpp:
		- Added methods IsSync(), IsAuth() and IsSession() to identify
		the packet's type.

	* src/Client.cpp:
		- SetAuthorizedProcess() was not sending any packet when the
		user is an administrator. It have been fixed sending a packet
		with index 0 and then sending a packet for each valid process
		starting at index 1.


2004-06-19  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Client.cpp:
		- SetAuthorizedProcess() now first adds any process authorized
		and then send a Session::Authorized packet to the client.

	* src/Config.cpp:
		- In GetOptionsFromFile() we use clear() member of ifstream
		object to delete the EOF bit after reopen the configuration
		file.

	* src/Main.cpp:
		- AddAuthorizedProcesses() now adds any valid process index. The
		Client class checks if it's a valid process before to send a
		Session::Authorized packet.

	* src/Process.cpp:
		- Launch() now send a Session::Authorized packet after send a
		Session::ProcessStart packet.


2004-06-17  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Main.hpp:
		- Fixed for() cicle on struct user's constructor.

	* src/Main.cpp:
		- Added break instruction on ProtoSession()'s switch block.
		- Uses new method IsProcess() of ProcTree class to add valid
		processes to the client.
		- The random string is updated before send it to the client.

	* src/Utils.cpp:
		- Fixed random_string() adding trunc() when converting random
		number into integer.

	* src/ProcTree.hpp:
	* src/ProcTree.cpp:
		- Added new method IsProcess() to check for a valid process
		using the index value.
		- Fixed bad if sentence in GetProcessInfo() which gives a
		segmentation fault if the index is equal to zero.

	* src/Client.cpp:
		- SetAuthorizedProcess() method now send a Session::Authorized
		packet to the client. Also, if the index is zero, send a packet
		for each valid process.
		- IsAuthorized() method now use Index() member of List class.

	* doc/configuration-0.3_ES.html:
		- Updated information.


2004-06-16  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* doc/configuration_ES.html:
		- Removed. Deprecated by doc/configuration-0.3_ES.html.

	* doc/configuration-0.3_ES.html:
		- Added information about configuration file.

	* tools/sags-passwd.c:
		- Added third member to save processes allowed for a user.
		- Changed coding format of users file.

	* src/Main.hpp:
		- Changed members to adapt to new users file format.
		- Hash is now calculated on user constructor.

	* src/Main.cpp:
		- LoadUsers() now reads the new format of the users file.
		- Now we send the random string to the client after to get a
		Auth::Username.
		- We use IsAuthorized() method of Client class to check if the
		client is authorizated to deal with a process.

	* src/Utils.cpp:
	* src/Utils.hpp:
		- New function encode_password() used to decode and encode the
		users passwords.
		- New function random_string() to generate strings for
		authentication.

	* src/Client.hpp:
	* src/Client.cpp:
		- Added list of authorized processes.
		- New method to add processes to the list of authorized
		processes.
		- New method IsAuthorized().


2004-06-15  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Main.cpp:
		- Now we not send the version of software on Sync::Hello packet.
		Changed by a welcome message.
		- Now manage Session::ProcessGetInfo packets. We send the
		information string of the process indicated by the index using a
		Session::ProcessInfo packet.
		- Sending a default packet of authorization to the clients
		succesfully authenticated.

	* src/Packet.hpp:
		- Ordering values of session packets.
		- Added Session::Authorized, Session::ProcessGetInfo and
		Session::ProcessInfo packets.

	* src/Process.hpp:
	* src/Process.cpp:
		- New configuration options name, description and type.
		- Added GetInfo() to get the information string of the process.

	* src/ProcTree.hpp:
	* src/ProcTree.cpp:
		- Added GetProcessInfo() to get information string of a process.


2004-06-14  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Network.hpp:
	* src/Network.cpp:
		- Changed CHECK_TIMEOUT to 30 to give more time for
		autentication to the clients.
		- Changed CloseConnection and SendToAllClients to support new
		class Packet.

	* src/ProcTree.hpp:
	* src/ProcTree.cpp:
		- New files. Contains class to manage a list of processes.
		- Added Check method to check the processes and its options.
		- Added method to get process data using the index value.
		- Added method to write in a process using the index value.

	* src/Process.hpp:
	* src/Process.cpp:
		- New variables to check changes on configuration options.
		- Changed AddOptions method by GetOptions to get pointers to
		configuration options.
		- Added CheckOptions to check changes on relevant options like
		"Command", "Environment", "WorkDir" and "HistoryLength".
		- Start method now checks for existent process_logs and frees
		before the assignation with new values. Also deletes command and
		environment vars passed to execve.
		- WaitExit method now can kill a process if it not get
		terminated in a previous Kill method invocation.
		- Read method now send the data to the clients.

	* src/Program.cpp:
		- Now we use ProcMaster to access to the processes.

	* src/Config.cpp:
		- Added method Check() to test for group and name options
		loaded from the configuration file.
		- Changed Get method. Now returns pointer to internal data and
		if it can't find the data, add the option.

	* src/Log.cpp:
	* src/Log.hpp:
		- Added "ProcTree" for logging.

	* src/Packet.hpp:
	* src/Packet.cpp:
		- Changing to version 2 of protocol.
		- Added struct pkt_hdr.
		- Deleted references to Type.
		- New methods to manage Index and Command.

	* src/Client.hpp:
	* src/Client.cpp:
		- Changed AddBuffer and Disconnect to support new class Packet.

	* src/Protocol.cpp:
		- Changed SendPacket and RecvPacket to send the new Packet
		format.

	* src/Main.hpp:
	* src/Main.cpp:
		- Class Process now send the data to client.
		- Added ProtoSync, ProtoAuth and ProtoSession to manage the
		protocol's states.


2004-06-12  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* Preparing new version 0.3. Version is 0.3.0cvs.

	* doc/sags.conf.example:
		- Changed format to INI-like.

	* src/Config.cpp:
		- Changed method to process new configuration file format.
		- Options not recognized are now added to list.

	* doc/protocol-2_ES.html:
		- New file. This is the documentation of network protocol
		version 2.

	* doc/configuration-0.3_ES.html:
		- New file. It will be contains spanish instructions for
		configuration of SAGS Server version 0.3.


2004-06-11  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* Released version 0.2.5.


2004-06-07  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* doc/sags.conf.example:
		- Added text indicating usage of files with full path.
	
	* doc/configuration_ES.html:
		- New file. It will be contains instructions for configuration
		of SAGS Server.
	
	* doc/protocol_ES.html:
		- This is protocol_ES.txt changed to HTML format.


2004-06-06  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/List.hpp:
		- Added List<L>::Clear to empty the list.

	* src/Loop.hpp:
	* src/Loop.cpp:
		- Added SIGHUP to signal handler.
		- SignalEvent and Run now return integer value.

	* src/Main.hpp:
	* src/Main.cpp:
		- Manage SIGHUP to reload the configuration and users files
		files.
		- SignalEvent now return integer value.

	* src/Config.hpp:
	* src/Config.cpp:
		- Now stores the name of the configuration file.
		- Inform name of configuration file used after processed it
		completely.

	* src/Log.cpp:
		- "Critical" log option now shutdown the application using
		exit() function after to call Application.SignalEvent.

	* src/Program.cpp:
		- Exit message informs value that will be returned by the
		program.

	* TODO:
		- New file. Includes features to be added in next releases.
	
	* doc/protocol_ES.txt:
		- New file. Includes spanish description of the network
		protocol.


2004-06-01  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Log.hpp: Deleted not used configuration option 'lines'.
	* src/Log.cpp, src/Process.cpp: Removed deletion of configuration
	variables in the destructor.


2004-05-31  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Log.cpp, src/Main.cpp, src/Process.cpp, src/Protocol.cpp: Fixed
	size value passed to snprintf and vsnprintf functions.
	* src/Main.cpp: Increased the length of string that holds the
	application's version to include the "cvs" appended previously.
	* src/Network.hpp, src/Network.cpp: Removed innecesary variable
	'connections'.
	* src/Network.cpp: Application was not sending ErrorServerFull packet
	when disconnect a client because server is full. Fixed.
	* src/Loop.cpp: Now we free the memory assigned to tmout after to call
	the SignalEvent method.
	* src/Loop.cpp: timeout is now deleted in the destructor.
	* Released version 0.2.4.


2004-05-30  Pablo Carmona Amigo  <pcarm@users.sourceforge.net>

	* src/Client.cpp: Now Client::Disconnect also removes the send flag in
	the sockets list.
	* runmefirst: New executable to touch files before run configure on
	anonymous CVS files.
	* configure.in: Preparing new version 0.2.4. Appending "cvs".


2004-05-29  Pablo Carmona Amigo  <kernel@dday.cl>

	* Version 0.2.3.
	* src/Loop.hpp: DataEvent now needs a third boolean parameter to
	indicates if we are writing or not.
	* src/Loop.cpp: Added SIGPIPE to the signals managed by CatchSignal.
	* src/Main.cpp: The third boolean parameter of DataEvent is used to
	check when we are sending a packet.
	* src/Network.cpp: Added a RemoveWatch on DropClient.


2004-05-22  Pablo Carmona Amigo  <kernel@dday.cl>

	* Version 0.2.2.
	* Fixed a non-initializated variable in Client::Receive.
	* Removed unnecessary code in Client::Send who check a
	SessionDisconnect.
	* Fixed a bug in Network::SendData who can cause the program to
	receive a SIGPIPE.


2004-05-21  Pablo Carmona Amigo  <kernel@dday.cl>

	* Version 0.2.1.


2004-05-20  Pablo Carmona Amigo  <kernel@dday.cl>

	* Now the clients only needs to send a SessionDisconnect to get
	disconnected.


2004-05-18  Pablo Carmona Amigo  <kernel@dday.cl>

	* Version 0.2.0.
	* The linked lists are now derived from a class List. This enables a
	better control on memory assignations.
	* The length of the process's logs is now in bytes. The configuration
	variable HistoryLines has been renamed to HistoryLength.
	* Added error messages to the network protocol.
	* The version of client's protocol is now checked and compared with
	the version of the server's protocol.


2004-05-09  Pablo Carmona Amigo  <kernel@dday.cl>

	* Fixed the protocol's messages of SyncHello and AuthPassword.


2004-05-05  Pablo Carmona Amigo  <kernel@dday.cl>

	* Version 0.1.2.
	* Removed --posix from tarballs.
	* Now the packets are sent one by one to the client, not all the list.
	* The IP's are show with the port.


2004-04-23  Pablo Carmona Amigo  <kernel@dday.cl>

	* Version 0.1.1
	* Adapted to autotools.
	* Implemented a list to check the clients who are authenticating. It uses
	the timeouts to check who clients would be disconnected.
	* The default timeout has been changed to 15 secs.
	* Now MD5 hashes are compared with strncmp.
	* Fixed opening method of the configuration file.


2004-04-21  Pablo Carmona Amigo  <kernel@dday.cl>

	* Added a timeout checker for clients who don't authenticate. The
	default time is 30 seconds.
	* This is the 0.1 version.
